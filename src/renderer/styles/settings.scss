@use 'sass:color';
@use 'variables';
@use 'reusable';


.settings-container {
  @extend .vertical-container;

  border: 1px solid variables.$fgNormal;
  min-width: 75vw;
  max-width: 75vw;
  min-height: 95vh;
  max-height: 95vh;
}

.settings-nav {
  @extend .horizontal-container;

  position: relative;
  padding-top: variables.$spacing;

  >span {
    position: absolute;
    bottom: -2px;
    right: 0;
    left: 0;
    pointer-events: none;
    border-bottom: 2px ridge variables.$fgDark;
    flex-grow: 1;
    margin-bottom: 2px;
    z-index: -1;
  }
}

.settings-body {
  flex-grow: 1;
  width: 100%;
  height: 0;
  padding: variables.$spacing;
}

.settings-buttons {
  @extend .horizontal-container;

  align-self: center;
  justify-content: space-evenly;
  padding: calc(variables.$spacing * 2) 0;
  border-top: 1px solid variables.$fgDark;
  margin-top: variables.$spacing;
  min-width: 75%;
}

.settings-games-container {
  display: grid;
  height: 100%;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 2fr;
  column-gap: calc(variables.$spacing * 2);

  fieldset {
    width: 100%;
    min-height: 100%;
    height: 0;

    >legend {
      font-size: variables.$fontMax;
    }
  }

  h2,
  input[type=text] {
    width: 170px;
    margin: 0 variables.$spacing;
  }

  h2 {
    text-align: center;
  }

  .color-input {
    max-width: 8em;
  }

  input[type=color] {
    position: relative;
    left: -35px;
  }

  select {
    position: relative;
    left: -30px;
    top: 2px;
  }
}

.settings-display-container {
  @extend .vertical-container;

  div.label,
  label {
    @extend .vertical-container;

    align-items: flex-start;

    span {
      display: inline-flex;
      font-size: variables.$fontTitle;

      span {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        width: 14px;
        height: 14px;
        padding: 0.18em 0.05em 0 0;
        border: 1px solid currentColor;
        border-radius: 50%;
        margin-top: calc(variables.$spacing / 2);
        margin-left: calc(variables.$spacing * 2);
        font-family: 'Times New Roman';
        font-size: 8pt;
        font-weight: bold;
        filter: opacity(0.8);

        &:hover {
          filter: opacity(1);
        }
      }
    }

    input {

      &.short {
        min-width: 3em;
        width: 3em;
      }

      &.medium {
        min-width: 14em;
        width: 14em;
      }

      &.long {
        min-width: 90%;
        width: 90%;
      }
    }

    div.horizontal-container {
      margin-left: calc(variables.$spacing * 6);
    }

    >button.svg-button {
      margin-left: calc(variables.$spacing * 6);
      margin-top: 4px;
    }
  }

  fieldset {
    @extend .vertical-container;

    padding-bottom: calc(variables.$spacing * 3);
    margin: variables.$spacing calc(variables.$spacing * 3);
  }
}

.settings-scrapers-container {
  @extend .vertical-container;

  height: 100%;

  .scraper-header {
    @extend .horizontal-container;

    h2,
    h4 {
      display: flex;
      text-align: center;
      justify-content: center;
      align-items: center;
    }

    .btn-span {
      min-width: 22px;
    }

    .short-span {
      min-width: 7rem;
    }

    .medium-span {
      min-width: 12rem;
    }

    .long-span {
      min-width: 18rem;
    }

    .matcher-span {
      min-width: 10.4rem;
    }
  }

  fieldset {
    @extend .vertical-container;

    &.scrapers {
      max-height: 60%;
      min-height: 60%;
    }

    &.aliases {
      max-height: 40%;
      min-height: 40%;
    }

    legend>h1 {
      font-weight: normal;
    }

    legend>h2 {
      font-variant: small-caps;
    }

    .vertical-container>button {
      margin-top: 4px;
    }
  }

  input[type=text] {
    min-width: 12em;

    &.short {
      min-width: 7rem;
      width: 7rem;
      align-self: stretch;
    }

    &.long {
      min-width: 18rem;
    }
  }

  select {
    min-width: 12rem;
    max-width: 12rem;
    position: relative;
    top: 2px;
  }
}