@use 'sass:color';
@use 'variables';
@use 'reusable';
@use 'browse';
@use 'edit';
@use 'settings';
@use 'shared';


* {
  padding: variables.$spacing;
  margin: 0;
  overflow-wrap: anywhere;
  box-sizing: border-box;
  font-family: variables.$fontFamily;
  font-size: variables.$fontDefault;
  color: variables.$fgNormal;
}

body {
  --font-small: #{variables.$fontSmall};
  --font-title: #{variables.$fontTitle};
  --font-header: #{variables.$fontHeader};
  --font-max: #{variables.$fontMax};

  background-color: variables.$bgNormal;
  color: variables.$fgNormal;

  overflow-y: auto;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 100%;
  max-width: 100%;
  min-height: calc(100vh - 7px);
  max-height: calc(100vh - 7px);
  padding: variables.$spacing;

  div {
    padding: 0;
  }
}

h1 {
  font-size: variables.$fontMax;
}

h2 {
  font-size: variables.$fontHeader;
}

h3 {
  font-size: variables.$fontTitle;
  font-weight: normal;
}

button {
  @include variables.bgGradient();
  min-width: 75px;
  padding: 2px;
  padding-top: 0;
  border: 1px solid color.adjust(variables.$fgNormal, $lightness: -10%);

  &:hover:not(:disabled) {
    cursor: pointer;
    filter: brightness(1.2);
  }

  &:disabled {
    color: variables.$fgNormal;
    filter: brightness(0.6);
  }
}

select {
  @include variables.bgGradient(to bottom,
    linear-gradient(to right, transparent calc(100% - 21px), variables.$bgDark, calc(100% - 19px), color.adjust(variables.$fgNormal, $lightness: -20%), calc(100% - 18px), transparent calc(100% - 18px)));
  border: 1px solid color.adjust(variables.$fgNormal, $lightness: -20%);
  outline: 1px solid black;
  padding: 0 6px 2px 0;
  margin: 0 variables.$spacing variables.$spacing;
}

fieldset {
  border: 1px solid currentColor;
}

fieldset>legend {
  padding: 0 calc(variables.$spacing / 2);
  margin-left: variables.$spacing;
}

fieldset p {
  padding: 0 variables.$spacing;
}

svg,
svg * {
  padding: 0;
}

label {
  display: flex;
  align-items: center;

  input[type=checkbox] {
    margin: 0 4px 0 0;
  }

  &:hover>input[type=checkbox] {
    background-image: linear-gradient(red, 50%, darkred 50%);

    &::before {
      transform: scale(1);
      clip-path: polygon(20% 0%, 0% 20%, 30% 50%, 0% 80%, 20% 100%, 50% 70%, 80% 100%, 100% 80%, 70% 50%, 100% 20%, 80% 0%, 50% 30%);
    }
  }
}

input[type=checkbox] {
  @include variables.bgGradient();
  appearance: none;
  font: inherit;
  color: currentColor;
  width: 0.8em;
  height: 0.8em;
  border: 1px solid currentColor;
  outline: 1px solid black;
  position: relative;
  display: grid;
  place-content: center;

  &::before {
    content: "";
    width: 0.5em;
    height: 0.5em;
    transform: scale(0);
    transition: all 100ms ease-in-out;
    background: white;
    transform-origin: center;
  }

  &:checked {
    background-image: linear-gradient(green, 50%, darkgreen 50%);

    &::before {
      transform: scale(1);
      clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    }
  }

  &:indeterminate {
    background-image: linear-gradient(goldenrod, 50%, darkgoldenrod 50%);

    &::before {
      transform: scale(1);
      clip-path: inset(0.15em 0.03em round 15%);
    }
  }

  &:hover {
    background-image: linear-gradient(red, 50%, darkred 50%);

    &::before {
      transform: scale(1);
      clip-path: polygon(20% 0%, 0% 20%, 30% 50%, 0% 80%, 20% 100%, 50% 70%, 80% 100%, 100% 80%, 70% 50%, 100% 20%, 80% 0%, 50% 30%);
    }
  }
}

input[type=text] {
  background-color: variables.$bgLight;
  border: 1px solid black;
  margin: 0 variables.$spacing;
  transition: border 200ms;

  &:focus {
    outline: none;
    border: 1px solid variables.$highlightActive;
  }
}

input[type=color] {
  background-color: transparent;
  border: none;
  max-width: 27px;
  max-height: 27px;
  cursor: pointer;
}

::-webkit-scrollbar {
  // width: 15px;
  background-image: linear-gradient(to right, color.adjust(variables.$bgDark, $lightness: -5%), color.adjust(variables.$bgLight, $lightness: 3%));
  -webkit-border-radius: 100px;
}

@mixin scrollbarGradient($color1, $color2) {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="-1 0 18 11"><path d="M 1.5 4.8 C 1.1 4.8 0.8 5.1 0.8 5.5 C 0.8 5.9 1.1 6.3 1.5 6.3 V 4.8 Z M 13.5 6.3 C 13.9 6.3 14.3 5.9 14.3 5.5 C 14.3 5.1 13.9 4.8 13.5 4.8 V 6.3 Z M 1.5 8.8 C 1.1 8.8 0.8 9.1 0.8 9.5 C 0.8 9.9 1.1 10.3 1.5 10.3 V 8.8 Z M 13.5 10.3 C 13.9 10.3 14.3 9.9 14.3 9.5 C 14.3 9.1 13.9 8.8 13.5 8.8 V 10.3 Z M 1.5 0.8 C 1.1 0.8 0.8 1.1 0.8 1.5 C 0.8 1.9 1.1 2.3 1.5 2.3 V 0.8 Z M 13.5 2.3 C 13.9 2.3 14.3 1.9 14.3 1.5 C 14.3 1.1 13.9 0.8 13.5 0.8 V 2.3 Z M 1.5 6.3 H 13.5 V 4.8 H 1.5 V 6.3 Z M 1.5 10.3 H 13.5 V 8.8 H 1.5 V 10.3 Z M 1.5 2.3 H 13.5 V 0.8 H 1.5 V 2.3 Z" fill="#{variables.percent-encode(variables.$fgNormal)}" /></svg>'),
    linear-gradient(to right, $color1, $color2);
}

::-webkit-scrollbar-thumb {
  @include scrollbarGradient(color.adjust(variables.$bgLight, $lightness: 5%), color.adjust(variables.$bgDark, $lightness: -3%));
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  border: 1px solid color.adjust(variables.$fgNormal, $lightness: -20%);
  outline: 1px solid black;
  border-radius: 100px;
  min-height: 40px;

  &:hover {
    @include scrollbarGradient(color.adjust(variables.$bgLight, $lightness: 10%), color.adjust(variables.$bgDark, $lightness: 5%));
  }

  &:active {
    @include scrollbarGradient(color.adjust(variables.$bgLight, $lightness: -5%), color.adjust(variables.$bgDark, $lightness: -5%));
  }
}